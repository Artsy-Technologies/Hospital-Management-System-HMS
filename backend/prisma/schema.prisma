generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  password String
  role     String
  doctor   Doctor?
  staff    Staff?
}

model Doctor {
  id             Int     @id @default(autoincrement())
  userId         Int     @unique
  specialization String
  qualifications String
  availability   String
  license        String
  contactInfo    String
  profilePhoto   String?
  user           User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  attendances    DoctorAttendance[]
  leaveRequests  DoctorLeaveRequest[]
}

model Staff {
  id          Int      @id @default(autoincrement())
  userId      Int      @unique
  position    String
  department  String
  contactInfo String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model DoctorAttendance {
  id        Int      @id @default(autoincrement())
  doctorId  Int
  checkIn   DateTime?
  checkOut  DateTime?
  date      DateTime @default(now())
  doctor    Doctor   @relation(fields: [doctorId], references: [userId], onDelete: Cascade)
}

model DoctorLeaveRequest {
  id        Int      @id @default(autoincrement())
  doctorId  Int
  leaveType String
  startDate DateTime
  endDate   DateTime
  reason    String
  status    String   @default("pending") // pending, approved, rejected
  createdAt DateTime @default(now())
  doctor    Doctor   @relation(fields: [doctorId], references: [userId], onDelete: Cascade)
}



